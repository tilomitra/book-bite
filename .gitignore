# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the CocoaPods CocoaPods.
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# Node.js (for server directory)
server/node_modules/
server/npm-debug.log*
server/yarn-debug.log*
server/yarn-error.log*
server/lerna-debug.log*
server/.pnpm-debug.log*

# Runtime data
server/pids
server/*.pid
server/*.seed
server/*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
server/lib-cov

# Coverage directory used by tools like istanbul
server/coverage/
server/*.lcov

# nyc test coverage
server/.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
server/.grunt

# Bower dependency directory (https://bower.io/)
server/bower_components

# node-waf configuration
server/.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
server/build/Release

# Dependency directories
server/node_modules/
server/jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
server/web_modules/

# TypeScript cache
server/*.tsbuildinfo

# Optional npm cache directory
server/.npm

# Optional eslint cache
server/.eslintcache

# Optional stylelint cache
server/.stylelintcache

# Microbundle cache
server/.rpt2_cache/
server/.rts2_cache_cjs/
server/.rts2_cache_es/
server/.rts2_cache_umd/

# Optional REPL history
server/.node_repl_history

# Output of 'npm pack'
server/*.tgz

# Yarn Integrity file
server/.yarn-integrity

# dotenv environment variable files
server/.env
server/.env.development.local
server/.env.test.local
server/.env.production.local
server/.env.local

# parcel-bundler cache (https://parceljs.org/)
server/.cache
server/.parcel-cache

# Next.js build output
server/.next

# Nuxt.js build / generate output
server/.nuxt
server/dist

# Gatsby files
server/.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# server/public

# Vuepress build output
server/.vuepress/dist

# Serverless directories
server/.serverless/

# FuseBox cache
server/.fusebox/

# DynamoDB Local files
server/.dynamodb/

# TernJS port file
server/.tern-port

# Stores VSCode versions used for testing VSCode extensions
server/.vscode-test

# yarn v2
server/.yarn/cache
server/.yarn/unplugged
server/.yarn/build-state.yml
server/.yarn/install-state.gz
server/.pnp.*

# Build output
server/dist/

# Logs
server/logs
server/*.log

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db